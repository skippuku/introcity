CHANGELOG

0.2 (Beta)
	- Simplified types
		- Removed IntroStruct, IntroEnum, and IntroTypePtrList
		- Removed all usage of flexible array members in introlib
		- IntroFunction changes:
			func->type->args->count       => func.count_args
			func->type->args->types       => func.arg_types
			func->type->of                => func.return_type

		- IntroType changes:
			type->i_struct->count_members => type->count
			type->i_struct->members       => type->members

			type->i_enum->count_members   => type->count
			type->i_enum->members         => type->values
			type->i_enum->is_flags        => type->flags & INTRO_IS_FLAGS
			type->i_enum->is_sequential   => type->flags & INTRO_IS_SEQUENTIAL

			type->array_size              => type->count

			intro_size(type)              => type->size
			<unavailable>                 => type->align

			if (type->of)                 => if (intro_has_of(type))
			/* 'of' now shares storage with other fields */

	- Struct member offsets are now known by the parser.
		- Value attributes now support structs
		- Generated headers are much more concise
		- NOTE: pack(x), __attribute__((aligned(x))), etc. are not yet implemented

	- City is now much more reliable
		- much better handling of pointers
		- city file data can now be discarded after load
		- reduction in serialized data size

	- Macro information generation

	- '#prama intro' can be used to control what parts of a file should have
	information generated
		- push, pop
		- enable [x], disable [x] where x is either omitted or one of the
		following: functions, macros, all, includes, system

	- Files are now tokenized all at once. Previously, the preprocessor and
	parser would tokenize as needed. This simplifies the preprocessor and
	parser.

	- intro_print() improvements

	- Vim syntax generation with --gen-vim-syntax

	- intro performance metrics report with option '-V'

	- Miscellaneous fixes

0.1 (Beta)
	first public release
